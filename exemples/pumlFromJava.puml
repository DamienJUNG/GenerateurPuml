@startuml

'Code généré automatiquement ;>
skinparam style strictuml
hide empty members
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam classbackgroundColor LightGoldenRodYellow
skinparam classbordercolor red
skinparam classattribute none
skinparam classborderthickness 2


class pumlFromJava.Java2Puml {

	+ <<Create>> Java2Puml()
	+ main(args : String[]) {static}
}


class pumlFromJava.PumlDiagram {

	+ <<Create>> PumlDiagram()
	+ generatePuml(fileName : String, path : String, code : String)
}


interface pumlFromJava.PumlElement <<interface>> {
	+ getDccCode() : String {abstract}
	+ getDcaCode() : String {abstract}
	+ getSimpleName() : String {abstract}
}

class pumlFromJava.PumlEnumAttribut implements pumlFromJava.PumlElement {

	+ <<Create>> PumlEnumAttribut(element : Element)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getSimpleName() : String {redefines ::getSimpleName}
}
	PumlEnumAttribut o-> "1\n -element" javax.lang.model.element.Element


class pumlFromJava.PumlOptionOUT implements jdk.javadoc.doclet.Doclet.Option {
	- name : String 

	+ <<Create>> PumlOptionOUT()
	+ getArgumentCount() :  Integer {redefines ::getArgumentCount}
	+ getDescription() : String {redefines ::getDescription}
	+ getKind() : jdk.javadoc.doclet.Doclet.Option.Kind {redefines ::getKind}
	+ getNames() : String[*] {redefines ::getNames}
	+ getParameters() : String {redefines ::getParameters}
	+ process(option : String, arguments : String>) :  Boolean {redefines ::process}
	+ getName() : String
}


class pumlFromJava.PumlOptionPATH implements jdk.javadoc.doclet.Doclet.Option {
	- path : String 

	+ <<Create>> PumlOptionPATH()
	+ getArgumentCount() :  Integer {redefines ::getArgumentCount}
	+ getDescription() : String {redefines ::getDescription}
	+ getKind() : jdk.javadoc.doclet.Doclet.Option.Kind {redefines ::getKind}
	+ getNames() : String[*] {redefines ::getNames}
	+ getParameters() : String {redefines ::getParameters}
	+ process(option : String, arguments : String>) :  Boolean {redefines ::process}
	+ getPath() : String
}


class pumlFromJava.PumlConstructor extends pumlFromJava.PumlMethod {

	+ <<Create>> PumlConstructor(element : Element)
	+ getDccCode() : String {redefines ::getDccCode}
}


class pumlFromJava.PumlAccessLevel implements pumlFromJava.PumlElement {

	+ <<Create>> PumlAccessLevel(modifiers : Modifier>)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getSimpleName() : String {redefines ::getSimpleName}
}
	PumlAccessLevel o-> "0 .. *\n -modifiers" javax.lang.model.element.Modifier


class pumlFromJava.PumlPackage implements pumlFromJava.PumlElement {

	+ <<Create>> PumlPackage(element : Element)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getKind() : String
	+ getSimpleName() : String {redefines ::getSimpleName}
	+ getDccElements() : String
	+ getDcaElements() : String
}
	PumlPackage o-> "1\n -element" javax.lang.model.element.Element
	PumlPackage o-> "0 .. *\n -elements" pumlFromJava.PumlElement


class pumlFromJava.PumlEnum implements pumlFromJava.PumlElement {

	+ <<Create>> PumlEnum(element : Element)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getEnclosingElement() : String
	+ getSimpleName() : String {redefines ::getSimpleName}
	+ getKind() : String
	+ getDccAttributs() : String
	+ getDcaAttributs() : String
	+ getSuperClass() : String
	+ getInterfaces() : String
}
	PumlEnum o-> "1\n -element" javax.lang.model.element.Element
	PumlEnum o-> "0 .. *\n -attributs" pumlFromJava.PumlEnumAttribut


class pumlFromJava.PumlInterface implements pumlFromJava.PumlElement {

	+ <<Create>> PumlInterface(element : Element)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getEnclosingElement() : String
	+ getSimpleName() : String {redefines ::getSimpleName}
	+ getKind() : String
	- getMethods() : String
	+ getSuperClass() : String
}
	PumlInterface o-> "1\n -element" javax.lang.model.element.Element
	PumlInterface o-> "0 .. *\n -methods" pumlFromJava.PumlMethod


class pumlFromJava.PumlAttribut implements pumlFromJava.PumlElement {

	+ <<Create>> PumlAttribut(element : Element)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getSimpleName() : String {redefines ::getSimpleName}
	+ getType() : String
	+ getAccessLevel() : String
	+ getOthersModifiers() : String
}
	PumlAttribut o-> "1\n -element" javax.lang.model.element.Element
	PumlAttribut o-> "1\n -type" pumlFromJava.PumlType
	PumlAttribut o-> "1\n -accessLevel" pumlFromJava.PumlAccessLevel


class pumlFromJava.PumlType implements pumlFromJava.PumlElement {

	+ <<Create>> PumlType(type : TypeMirror)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getSimpleName() : String {redefines ::getSimpleName}
	+ getLongName() : String
}
	PumlType o-> "1\n -type" javax.lang.model.type.TypeMirror


class pumlFromJava.PumlDoclet implements jdk.javadoc.doclet.Doclet {

	+ <<Create>> PumlDoclet()
	+ init(locale : Locale, reporter : Reporter) {redefines ::init}
	+ getName() : String {redefines ::getName}
	+ getSupportedOptions() : Option[*] {redefines ::getSupportedOptions}
	+ getSupportedSourceVersion() : javax.lang.model.SourceVersion {redefines ::getSupportedSourceVersion}
	+ run(environment : DocletEnvironment) :  Boolean {redefines ::run}
	+ generateDcc(environment : DocletEnvironment) : String
	+ generateDca(environment : DocletEnvironment) : String
}
	PumlDoclet o-> "1\n -path" pumlFromJava.PumlOptionPATH
	PumlDoclet o-> "1\n -out" pumlFromJava.PumlOptionOUT
	PumlDoclet o-> "1\n -dcc" pumlFromJava.PumlOptionDCC
	PumlDoclet o-> "1\n -docletEnvironment" jdk.javadoc.doclet.DocletEnvironment


class pumlFromJava.PumlRelation implements pumlFromJava.PumlElement {

	+ <<Create>> PumlRelation(element : Element)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getMultipicity() : String
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getAccessLevel() : String
	+ getType() : String
	+ getSuperClass() : String
	+ getSimpleName() : String {redefines ::getSimpleName}
}
	PumlRelation o-> "1\n -element" javax.lang.model.element.Element
	PumlRelation o-> "1\n -type" pumlFromJava.PumlType


class pumlFromJava.PumlClass implements pumlFromJava.PumlElement {

	+ <<Create>> PumlClass(element : Element)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getSimpleName() : String {redefines ::getSimpleName}
	+ getEnclosingElement() : String
	+ getKind() : String
	- getDccAttributs() : String
	- getDcaAttributs() : String
	- getDccMethods() : String
	+ getSuperClass() : String
	+ getInterfaces() : String
	+ getDccRelations() : String
	+ getDcaRelations() : String
	+ getOthersModifiers() : String
}
	PumlClass o-> "1\n -element" javax.lang.model.element.Element
	PumlClass o-> "0 .. *\n -attributs" pumlFromJava.PumlAttribut
	PumlClass o-> "0 .. *\n -methods" pumlFromJava.PumlMethod
	PumlClass o-> "0 .. *\n -relations" pumlFromJava.PumlRelation


class pumlFromJava.PumlOptionDCC implements jdk.javadoc.doclet.Doclet.Option {
	- isDcc :  Boolean 

	+ <<Create>> PumlOptionDCC()
	+ getArgumentCount() :  Integer {redefines ::getArgumentCount}
	+ getDescription() : String {redefines ::getDescription}
	+ getKind() : jdk.javadoc.doclet.Doclet.Option.Kind {redefines ::getKind}
	+ getNames() : String[*] {redefines ::getNames}
	+ getParameters() : String {redefines ::getParameters}
	+ process(option : String, arguments : String>) :  Boolean {redefines ::process}
	+ isDcc() :  Boolean
}


class pumlFromJava.PumlMethod implements pumlFromJava.PumlElement {

	+ <<Create>> PumlMethod(element : Element)
	+ getDccCode() : String {redefines ::getDccCode}
	+ getDcaCode() : String {redefines ::getDcaCode}
	+ getEnclosingElement() : String
	+ getSimpleName() : String {redefines ::getSimpleName}
	+ getType() : String
	+ getAccessLevel() : String
	+ getParameters() : String
	+ getOthersModifiers() : String
	+ getAnnotation() : String
}
	PumlMethod o-> "1\n -type" pumlFromJava.PumlType
	PumlMethod o-> "1\n -element" javax.lang.model.element.Element
	PumlMethod o-> "1\n -accessLevel" pumlFromJava.PumlAccessLevel




@enduml