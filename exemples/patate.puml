@startuml

'Code généré automatiquement ;>
skinparam style strictuml
hide empty members
skinparam classAttributeIconSize 0
skinparam classFontStyle Bold
skinparam classbackgroundColor LightGoldenRodYellow
skinparam classbordercolor red
skinparam classattribute none
skinparam classborderthickness 2

package western{
class Boisson {

	+ <<Create>> Boisson(java.lang.String,western.Genre)
	+ getNom() : java.lang.String
	+ getGenre() : western.Genre
	+ getNomAvecArticleIndefini() : java.lang.String
	+ getNomAvecArticlePartitif() : java.lang.String
	+ getNomAvecArticleDefini() : java.lang.String
	+ getNomAvecPreposition(java.lang.String) : java.lang.String
}
	Boisson o-> "1\n -substantif" Substantif


class Substantif {
	- nom : String 

	+ <<Create>> Substantif(java.lang.String,western.Genre)
	+ getNom() : java.lang.String
	+ getGenre() : western.Genre
	+ toString() : java.lang.String
	+ isVowel(char) : boolean {static}
	+ startsWithVowel(java.lang.String) : boolean {static}
	+ getArticleIndefini() : java.lang.String
	+ avecArticleIndefini() : java.lang.String
	+ getArticleDefini(western.Genre) : java.lang.String {static}
	+ getArticleDefini() : java.lang.String
	+ avecArticleDefini() : java.lang.String
	+ faireElision(java.lang.String) : java.lang.String {static}
	+ elision() : boolean
	+ getArticlePartitif() : java.lang.String
	+ avecArticlePartitif() : java.lang.String
	+ avecElision(java.lang.String) : java.lang.String
	+ avecPreposition(java.lang.String) : java.lang.String
}
	Substantif o-> "1\n -genre" Genre


class Histoire1 {

	+ <<Create>> Histoire1()
	+ main(java.lang.String[]) {static}
}


class Histoire4 {

	+ <<Create>> Histoire4()
	+ main(java.lang.String[]) {static}
}


interface HorsLaLoi <<interface>> {
	+ kidnapper(western.Dame) {abstract}
	+ seFaireCapturer(western.Cowboy) {abstract}
	+ getPrime() : int {abstract}
	+ getSesDames() : java.util.ArrayList<western.Dame> {abstract}
	+ getPseudo() : java.lang.String {abstract}
	+ repondre(western.Cowboy) {abstract}
}

class Histoire3 {

	+ <<Create>> Histoire3()
	+ main(java.lang.String[]) {static}
}


class Ripou extends western.Cowboy implements western.HorsLaLoi {

	+ <<Create>> Ripou(java.lang.String,western.Boisson,java.lang.String)
	+ <<Create>> Ripou(java.lang.String,java.lang.String)
	+ <<Create>> Ripou(java.lang.String,western.Boisson)
	+ <<Create>> Ripou(java.lang.String)
	+ kidnapper(western.Dame)
	+ getSesDames() : java.util.ArrayList<western.Dame>
	+ seFaireCapturer(western.Cowboy)
	+ getPseudo() : java.lang.String
	+ repondre(western.Cowboy)
	+ sePresenter()
	+ capturer(western.HorsLaLoi)
	+ getPrime() : int
}
	Ripou o-> "1\n -brigand" Brigand


class HistoireTest {

	+ <<Create>> HistoireTest()
	+ main(java.lang.String[]) {static}
}


abstract class Personnage {
	# nom : String 

	+ <<Create>> Personnage(java.lang.String)
	+ getPseudo() : java.lang.String {abstract}
	+ <<Create>> Personnage(java.lang.String,western.Boisson)
	+ dire(java.lang.String)
	+ sePresenter()
	+ boire(western.Boisson)
	+ boire()
	+ getNom() : java.lang.String
	+ getBoisson() : western.Boisson
}
	Personnage o-> "1\n #BOISSON_PAR_DEFAUT" Boisson
	Personnage o-> "1\n #boisson" Boisson


class Narrateur extends western.Personnage {

	+ <<Create>> Narrateur(java.lang.String)
	+ boire(western.Boisson)
	+ sePresenter()
	+ getPseudo() : java.lang.String
	+ dire(java.lang.String)
}


class Brigand extends western.Personnage implements western.HorsLaLoi {
	- estLibre : boolean 
	- look : String 
	- prime : int 

	+ <<Create>> Brigand(java.lang.String,western.Boisson,java.lang.String)
	+ <<Create>> Brigand(java.lang.String,java.lang.String)
	+ <<Create>> Brigand(java.lang.String,western.Boisson)
	+ <<Create>> Brigand(java.lang.String)
	+ getPrime() : int
	+ kidnapper(western.Dame)
	+ getEstLibre() : boolean
	+ getGeolier() : western.Cowboy
	+ getSesDames() : java.util.ArrayList<western.Dame>
	+ seFaireCapturer(western.Cowboy)
	+ getPseudo() : java.lang.String
	+ repondre(western.Cowboy)
	+ sePresenter()
}
	Brigand o-> "1\n -geolier" Cowboy
	Brigand o-> " -sesDames[]" Dame


class Cowboy extends western.Personnage {
	# replique : String 
	# recompense : int 

	+ <<Create>> Cowboy(java.lang.String,western.Boisson,java.lang.String)
	+ <<Create>> Cowboy(java.lang.String,western.Boisson)
	+ <<Create>> Cowboy(java.lang.String)
	+ getVilains() : java.lang.String
	+ setReplique(java.lang.String)
	+ getPseudo() : java.lang.String
	+ sePresenter()
	+ direReplique()
	+ tirerSur(western.HorsLaLoi)
	+ capturer(western.HorsLaLoi)
}
	Cowboy o-> " -vilains[]" HorsLaLoi


class Dame extends western.Personnage {
	- estlibre : boolean 

	+ <<Create>> Dame(java.lang.String,western.Boisson)
	+ <<Create>> Dame(java.lang.String)
	+ getGeolier() : western.HorsLaLoi
	+ seFaitEnlever(western.HorsLaLoi)
	+ seFaitSauver(western.Cowboy)
	+ getPseudo() : java.lang.String
	+ sePresenter()
}
	Dame o-> "1\n -geolier" HorsLaLoi


enum Genre <<enum>> {
	FEMININ
	MASCULIN


}
}


@enduml